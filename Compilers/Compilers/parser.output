Terminals which are not used

   LT
   GT
   MUL
   ADD
   DIV


Grammar

    0 $accept: tokenlist $end

    1 tokenlist: token
    2          | tokenlist token

    3 token: BOOLCONST
    4      | NUMCONST
    5      | CHARCONST
    6      | STRINGCONST
    7      | ID
    8      | IF
    9      | THEN
   10      | TO
   11      | ELSE
   12      | WHILE
   13      | DEC
   14      | INC
   15      | FOR
   16      | STATIC
   17      | INT
   18      | BOOL
   19      | CHAR
   20      | IN
   21      | RETURN
   22      | BREAK
   23      | SYMBOL
   24      | EQ
   25      | LEQ
   26      | GEQ
   27      | NEQ
   28      | COMMENT
   29      | MAX
   30      | MIN
   31      | OR
   32      | NOT
   33      | AND
   34      | ADDASS
   35      | SUBASS
   36      | MULASS
   37      | DIVASS
   38      | DO
   39      | BY


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOLCONST (258) 3
NUMCONST (259) 4
CHARCONST (260) 5
STRINGCONST (261) 6
ID (262) 7
THEN (263) 9
IF (264) 8
WHILE (265) 12
FOR (266) 15
STATIC (267) 16
INT (268) 17
BOOL (269) 18
CHAR (270) 19
IN (271) 20
ELSE (272) 11
RETURN (273) 21
BREAK (274) 22
COMMENT (275) 28
SYMBOL (276) 23
EQ (277) 24
ADDASS (278) 34
SUBASS (279) 35
DIVASS (280) 37
MULASS (281) 36
LEQ (282) 25
GEQ (283) 26
NEQ (284) 27
DEC (285) 13
INC (286) 14
LT (287)
GT (288)
MUL (289)
MAX (290) 29
MIN (291) 30
ADD (292)
DIV (293)
DO (294) 38
BY (295) 39
TO (296) 10
AND (297) 33
OR (298) 31
NOT (299) 32


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
tokenlist (46)
    on left: 1 2, on right: 0 2
token (47)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39,
    on right: 1 2


state 0

    0 $accept: . tokenlist $end

    BOOLCONST    shift, and go to state 1
    NUMCONST     shift, and go to state 2
    CHARCONST    shift, and go to state 3
    STRINGCONST  shift, and go to state 4
    ID           shift, and go to state 5
    THEN         shift, and go to state 6
    IF           shift, and go to state 7
    WHILE        shift, and go to state 8
    FOR          shift, and go to state 9
    STATIC       shift, and go to state 10
    INT          shift, and go to state 11
    BOOL         shift, and go to state 12
    CHAR         shift, and go to state 13
    IN           shift, and go to state 14
    ELSE         shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    COMMENT      shift, and go to state 18
    SYMBOL       shift, and go to state 19
    EQ           shift, and go to state 20
    ADDASS       shift, and go to state 21
    SUBASS       shift, and go to state 22
    DIVASS       shift, and go to state 23
    MULASS       shift, and go to state 24
    LEQ          shift, and go to state 25
    GEQ          shift, and go to state 26
    NEQ          shift, and go to state 27
    DEC          shift, and go to state 28
    INC          shift, and go to state 29
    MAX          shift, and go to state 30
    MIN          shift, and go to state 31
    DO           shift, and go to state 32
    BY           shift, and go to state 33
    TO           shift, and go to state 34
    AND          shift, and go to state 35
    OR           shift, and go to state 36
    NOT          shift, and go to state 37

    tokenlist  go to state 38
    token      go to state 39


state 1

    3 token: BOOLCONST .

    $default  reduce using rule 3 (token)


state 2

    4 token: NUMCONST .

    $default  reduce using rule 4 (token)


state 3

    5 token: CHARCONST .

    $default  reduce using rule 5 (token)


state 4

    6 token: STRINGCONST .

    $default  reduce using rule 6 (token)


state 5

    7 token: ID .

    $default  reduce using rule 7 (token)


state 6

    9 token: THEN .

    $default  reduce using rule 9 (token)


state 7

    8 token: IF .

    $default  reduce using rule 8 (token)


state 8

   12 token: WHILE .

    $default  reduce using rule 12 (token)


state 9

   15 token: FOR .

    $default  reduce using rule 15 (token)


state 10

   16 token: STATIC .

    $default  reduce using rule 16 (token)


state 11

   17 token: INT .

    $default  reduce using rule 17 (token)


state 12

   18 token: BOOL .

    $default  reduce using rule 18 (token)


state 13

   19 token: CHAR .

    $default  reduce using rule 19 (token)


state 14

   20 token: IN .

    $default  reduce using rule 20 (token)


state 15

   11 token: ELSE .

    $default  reduce using rule 11 (token)


state 16

   21 token: RETURN .

    $default  reduce using rule 21 (token)


state 17

   22 token: BREAK .

    $default  reduce using rule 22 (token)


state 18

   28 token: COMMENT .

    $default  reduce using rule 28 (token)


state 19

   23 token: SYMBOL .

    $default  reduce using rule 23 (token)


state 20

   24 token: EQ .

    $default  reduce using rule 24 (token)


state 21

   34 token: ADDASS .

    $default  reduce using rule 34 (token)


state 22

   35 token: SUBASS .

    $default  reduce using rule 35 (token)


state 23

   37 token: DIVASS .

    $default  reduce using rule 37 (token)


state 24

   36 token: MULASS .

    $default  reduce using rule 36 (token)


state 25

   25 token: LEQ .

    $default  reduce using rule 25 (token)


state 26

   26 token: GEQ .

    $default  reduce using rule 26 (token)


state 27

   27 token: NEQ .

    $default  reduce using rule 27 (token)


state 28

   13 token: DEC .

    $default  reduce using rule 13 (token)


state 29

   14 token: INC .

    $default  reduce using rule 14 (token)


state 30

   29 token: MAX .

    $default  reduce using rule 29 (token)


state 31

   30 token: MIN .

    $default  reduce using rule 30 (token)


state 32

   38 token: DO .

    $default  reduce using rule 38 (token)


state 33

   39 token: BY .

    $default  reduce using rule 39 (token)


state 34

   10 token: TO .

    $default  reduce using rule 10 (token)


state 35

   33 token: AND .

    $default  reduce using rule 33 (token)


state 36

   31 token: OR .

    $default  reduce using rule 31 (token)


state 37

   32 token: NOT .

    $default  reduce using rule 32 (token)


state 38

    0 $accept: tokenlist . $end
    2 tokenlist: tokenlist . token

    $end         shift, and go to state 40
    BOOLCONST    shift, and go to state 1
    NUMCONST     shift, and go to state 2
    CHARCONST    shift, and go to state 3
    STRINGCONST  shift, and go to state 4
    ID           shift, and go to state 5
    THEN         shift, and go to state 6
    IF           shift, and go to state 7
    WHILE        shift, and go to state 8
    FOR          shift, and go to state 9
    STATIC       shift, and go to state 10
    INT          shift, and go to state 11
    BOOL         shift, and go to state 12
    CHAR         shift, and go to state 13
    IN           shift, and go to state 14
    ELSE         shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    COMMENT      shift, and go to state 18
    SYMBOL       shift, and go to state 19
    EQ           shift, and go to state 20
    ADDASS       shift, and go to state 21
    SUBASS       shift, and go to state 22
    DIVASS       shift, and go to state 23
    MULASS       shift, and go to state 24
    LEQ          shift, and go to state 25
    GEQ          shift, and go to state 26
    NEQ          shift, and go to state 27
    DEC          shift, and go to state 28
    INC          shift, and go to state 29
    MAX          shift, and go to state 30
    MIN          shift, and go to state 31
    DO           shift, and go to state 32
    BY           shift, and go to state 33
    TO           shift, and go to state 34
    AND          shift, and go to state 35
    OR           shift, and go to state 36
    NOT          shift, and go to state 37

    token  go to state 41


state 39

    1 tokenlist: token .

    $default  reduce using rule 1 (tokenlist)


state 40

    0 $accept: tokenlist $end .

    $default  accept


state 41

    2 tokenlist: tokenlist token .

    $default  reduce using rule 2 (tokenlist)
