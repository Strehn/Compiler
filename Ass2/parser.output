Terminals which are not used

   THEN
   COMMENT
   SYMBOL
   MUL
   ADD
   DIV
   DO
   BY
   TO
   SUB


State 81 conflicts: 4 shift/reduce


Grammar

    0 $accept: declList $end

    1 declList: declList decl
    2         | decl

    3 decl: varDecl
    4     | funDecl

    5 varDecl: typeSpec varDeclList ';'

    6 scopedVarDecl: STATIC typeSpec varDeclList ';'
    7              | typeSpec varDeclList ';'

    8 varDeclList: varDeclList ',' varDeclInit
    9            | varDeclInit

   10 varDeclInit: varDeclId
   11            | varDeclId ':' simpleExp

   12 varDeclId: ID
   13          | ID '[' NUMCONST ']'

   14 typeSpec: INT
   15         | BOOL
   16         | CHAR

   17 funDecl: typeSpec ID '(' parms ')' stmt
   18        | ID '(' parms ')' stmt

   19 parms: parmList
   20      | /* empty */

   21 parmList: parmList ';' parmTypeList
   22         | parmTypeList

   23 parmTypeList: typeSpec parmIdList

   24 parmIdList: parmIdList ',' parmId
   25           | parmId

   26 parmId: ID
   27       | ID '[' ']'

   28 stmt: matched
   29     | unmatched

   30 matched: expStmt
   31        | compoundStmt
   32        | matchedselectStmt
   33        | matchediterStmt
   34        | returnStmt
   35        | breakStmt

   36 unmatched: unmatchedselectStmt
   37          | unmatchediterStmt

   38 expStmt: exp ';'
   39        | ';'

   40 compoundStmt: '{' localDecls stmtList '}'

   41 localDecls: localDecls scopedVarDecl
   42           | /* empty */

   43 stmtList: stmtList stmt
   44         | /* empty */

   45 matchedselectStmt: IF '(' simpleExp ')' matched ELSE matched

   46 unmatchedselectStmt: IF '(' simpleExp ')' stmt
   47                    | IF '(' simpleExp ')' matched ELSE unmatched

   48 matchediterStmt: WHILE '(' simpleExp ')' matched
   49                | FOR '(' ID IN ID ')' matched

   50 unmatchediterStmt: WHILE '(' simpleExp ')' unmatched
   51                  | FOR '(' ID IN ID ')' unmatched

   52 returnStmt: RETURN ';'
   53           | RETURN exp ';'

   54 breakStmt: BREAK ';'

   55 exp: mutable ASS exp
   56    | mutable ADDASS exp
   57    | mutable SUBASS exp
   58    | mutable MULASS exp
   59    | mutable DIVASS exp
   60    | mutable INC
   61    | mutable DEC
   62    | simpleExp

   63 simpleExp: simpleExp OR andExp
   64          | andExp

   65 andExp: andExp AND unaryRelExp
   66       | unaryRelExp

   67 unaryRelExp: NOT unaryRelExp
   68            | relExp

   69 relExp: minmaxExp relop minmaxExp
   70       | minmaxExp

   71 relop: LEQ
   72      | LT
   73      | GT
   74      | GEQ
   75      | EQ
   76      | NEQ

   77 minmaxExp: minmaxExp minmaxop sumExp
   78          | sumExp

   79 minmaxop: MIN
   80         | MAX

   81 sumExp: sumExp sumop mulExp
   82       | mulExp

   83 sumop: ADDASS
   84      | SUBASS

   85 mulExp: mulExp mulop unaryExp
   86       | unaryExp

   87 mulop: MULASS
   88      | DIVASS
   89      | MOD

   90 unaryExp: unaryop unaryExp
   91         | factor

   92 unaryop: SUBASS
   93        | MULASS
   94        | RAND

   95 factor: immutable
   96       | mutable

   97 mutable: ID
   98        | mutable '[' exp ']'

   99 immutable: '(' exp ')'
  100          | call
  101          | constant

  102 call: ID '(' args ')'

  103 args: argList
  104     | /* empty */

  105 argList: argList ',' exp
  106        | exp

  107 constant: NUMCONST
  108         | CHARCONST
  109         | STRINGCONST
  110         | BOOLCONST


Terminals, with rules where they appear

$end (0) 0
'(' (40) 17 18 45 46 47 48 49 50 51 99 102
')' (41) 17 18 45 46 47 48 49 50 51 99 102
',' (44) 8 24 105
':' (58) 11
';' (59) 5 6 7 21 38 39 52 53 54
'[' (91) 13 27 98
']' (93) 13 27 98
'{' (123) 40
'}' (125) 40
error (256)
BOOLCONST (258) 110
NUMCONST (259) 13 107
CHARCONST (260) 108
STRINGCONST (261) 109
ID (262) 12 13 17 18 26 27 49 51 97 102
THEN (263)
IF (264) 45 46 47
WHILE (265) 48 50
FOR (266) 49 51
STATIC (267) 6
INT (268) 14
BOOL (269) 15
CHAR (270) 16
IN (271) 49 51
ELSE (272) 45 47
RETURN (273) 52 53
BREAK (274) 54
COMMENT (275)
SYMBOL (276)
EQ (277) 75
ADDASS (278) 56 83
SUBASS (279) 57 84 92
DIVASS (280) 59 88
MULASS (281) 58 87 93
LEQ (282) 71
GEQ (283) 74
NEQ (284) 76
DEC (285) 61
INC (286) 60
LT (287) 72
GT (288) 73
MUL (289)
MAX (290) 80
MIN (291) 79
ADD (292)
DIV (293)
DO (294)
BY (295)
TO (296)
MOD (297) 89
RAND (298) 94
SUB (299)
AND (300) 65
OR (301) 63
NOT (302) 67
ASS (303) 55


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
declList (59)
    on left: 1 2, on right: 0 1
decl (60)
    on left: 3 4, on right: 1 2
varDecl (61)
    on left: 5, on right: 3
scopedVarDecl (62)
    on left: 6 7, on right: 41
varDeclList (63)
    on left: 8 9, on right: 5 6 7 8
varDeclInit (64)
    on left: 10 11, on right: 8 9
varDeclId (65)
    on left: 12 13, on right: 10 11
typeSpec (66)
    on left: 14 15 16, on right: 5 6 7 17 23
funDecl (67)
    on left: 17 18, on right: 4
parms (68)
    on left: 19 20, on right: 17 18
parmList (69)
    on left: 21 22, on right: 19 21
parmTypeList (70)
    on left: 23, on right: 21 22
parmIdList (71)
    on left: 24 25, on right: 23 24
parmId (72)
    on left: 26 27, on right: 24 25
stmt (73)
    on left: 28 29, on right: 17 18 43 46
matched (74)
    on left: 30 31 32 33 34 35, on right: 28 45 47 48 49
unmatched (75)
    on left: 36 37, on right: 29 47 50 51
expStmt (76)
    on left: 38 39, on right: 30
compoundStmt (77)
    on left: 40, on right: 31
localDecls (78)
    on left: 41 42, on right: 40 41
stmtList (79)
    on left: 43 44, on right: 40 43
matchedselectStmt (80)
    on left: 45, on right: 32
unmatchedselectStmt (81)
    on left: 46 47, on right: 36
matchediterStmt (82)
    on left: 48 49, on right: 33
unmatchediterStmt (83)
    on left: 50 51, on right: 37
returnStmt (84)
    on left: 52 53, on right: 34
breakStmt (85)
    on left: 54, on right: 35
exp (86)
    on left: 55 56 57 58 59 60 61 62, on right: 38 53 55 56 57 58 59
    98 99 105 106
simpleExp (87)
    on left: 63 64, on right: 11 45 46 47 48 50 62 63
andExp (88)
    on left: 65 66, on right: 63 64 65
unaryRelExp (89)
    on left: 67 68, on right: 65 66 67
relExp (90)
    on left: 69 70, on right: 68
relop (91)
    on left: 71 72 73 74 75 76, on right: 69
minmaxExp (92)
    on left: 77 78, on right: 69 70 77
minmaxop (93)
    on left: 79 80, on right: 77
sumExp (94)
    on left: 81 82, on right: 77 78 81
sumop (95)
    on left: 83 84, on right: 81
mulExp (96)
    on left: 85 86, on right: 81 82 85
mulop (97)
    on left: 87 88 89, on right: 85
unaryExp (98)
    on left: 90 91, on right: 85 86 90
unaryop (99)
    on left: 92 93 94, on right: 90
factor (100)
    on left: 95 96, on right: 91
mutable (101)
    on left: 97 98, on right: 55 56 57 58 59 60 61 96 98
immutable (102)
    on left: 99 100 101, on right: 95
call (103)
    on left: 102, on right: 100
args (104)
    on left: 103 104, on right: 102
argList (105)
    on left: 105 106, on right: 103 105
constant (106)
    on left: 107 108 109 110, on right: 101


state 0

    0 $accept: . declList $end

    ID    shift, and go to state 1
    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    declList  go to state 5
    decl      go to state 6
    varDecl   go to state 7
    typeSpec  go to state 8
    funDecl   go to state 9


state 1

   18 funDecl: ID . '(' parms ')' stmt

    '('  shift, and go to state 10


state 2

   14 typeSpec: INT .

    $default  reduce using rule 14 (typeSpec)


state 3

   15 typeSpec: BOOL .

    $default  reduce using rule 15 (typeSpec)


state 4

   16 typeSpec: CHAR .

    $default  reduce using rule 16 (typeSpec)


state 5

    0 $accept: declList . $end
    1 declList: declList . decl

    $end  shift, and go to state 11
    ID    shift, and go to state 1
    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    decl      go to state 12
    varDecl   go to state 7
    typeSpec  go to state 8
    funDecl   go to state 9


state 6

    2 declList: decl .

    $default  reduce using rule 2 (declList)


state 7

    3 decl: varDecl .

    $default  reduce using rule 3 (decl)


state 8

    5 varDecl: typeSpec . varDeclList ';'
   17 funDecl: typeSpec . ID '(' parms ')' stmt

    ID  shift, and go to state 13

    varDeclList  go to state 14
    varDeclInit  go to state 15
    varDeclId    go to state 16


state 9

    4 decl: funDecl .

    $default  reduce using rule 4 (decl)


state 10

   18 funDecl: ID '(' . parms ')' stmt

    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    $default  reduce using rule 20 (parms)

    typeSpec      go to state 17
    parms         go to state 18
    parmList      go to state 19
    parmTypeList  go to state 20


state 11

    0 $accept: declList $end .

    $default  accept


state 12

    1 declList: declList decl .

    $default  reduce using rule 1 (declList)


state 13

   12 varDeclId: ID .
   13          | ID . '[' NUMCONST ']'
   17 funDecl: typeSpec ID . '(' parms ')' stmt

    '['  shift, and go to state 21
    '('  shift, and go to state 22

    $default  reduce using rule 12 (varDeclId)


state 14

    5 varDecl: typeSpec varDeclList . ';'
    8 varDeclList: varDeclList . ',' varDeclInit

    ';'  shift, and go to state 23
    ','  shift, and go to state 24


state 15

    9 varDeclList: varDeclInit .

    $default  reduce using rule 9 (varDeclList)


state 16

   10 varDeclInit: varDeclId .
   11            | varDeclId . ':' simpleExp

    ':'  shift, and go to state 25

    $default  reduce using rule 10 (varDeclInit)


state 17

   23 parmTypeList: typeSpec . parmIdList

    ID  shift, and go to state 26

    parmIdList  go to state 27
    parmId      go to state 28


state 18

   18 funDecl: ID '(' parms . ')' stmt

    ')'  shift, and go to state 29


state 19

   19 parms: parmList .
   21 parmList: parmList . ';' parmTypeList

    ';'  shift, and go to state 30

    $default  reduce using rule 19 (parms)


state 20

   22 parmList: parmTypeList .

    $default  reduce using rule 22 (parmList)


state 21

   13 varDeclId: ID '[' . NUMCONST ']'

    NUMCONST  shift, and go to state 31


state 22

   17 funDecl: typeSpec ID '(' . parms ')' stmt

    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    $default  reduce using rule 20 (parms)

    typeSpec      go to state 17
    parms         go to state 32
    parmList      go to state 19
    parmTypeList  go to state 20


state 23

    5 varDecl: typeSpec varDeclList ';' .

    $default  reduce using rule 5 (varDecl)


state 24

    8 varDeclList: varDeclList ',' . varDeclInit

    ID  shift, and go to state 33

    varDeclInit  go to state 34
    varDeclId    go to state 16


state 25

   11 varDeclInit: varDeclId ':' . simpleExp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    simpleExp    go to state 45
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 26

   26 parmId: ID .
   27       | ID . '[' ']'

    '['  shift, and go to state 59

    $default  reduce using rule 26 (parmId)


state 27

   23 parmTypeList: typeSpec parmIdList .
   24 parmIdList: parmIdList . ',' parmId

    ','  shift, and go to state 60

    $default  reduce using rule 23 (parmTypeList)


state 28

   25 parmIdList: parmId .

    $default  reduce using rule 25 (parmIdList)


state 29

   18 funDecl: ID '(' parms ')' . stmt

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    IF           shift, and go to state 61
    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    RETURN       shift, and go to state 64
    BREAK        shift, and go to state 65
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    ';'          shift, and go to state 66
    '('          shift, and go to state 44
    '{'          shift, and go to state 67

    stmt                 go to state 68
    matched              go to state 69
    unmatched            go to state 70
    expStmt              go to state 71
    compoundStmt         go to state 72
    matchedselectStmt    go to state 73
    unmatchedselectStmt  go to state 74
    matchediterStmt      go to state 75
    unmatchediterStmt    go to state 76
    returnStmt           go to state 77
    breakStmt            go to state 78
    exp                  go to state 79
    simpleExp            go to state 80
    andExp               go to state 46
    unaryRelExp          go to state 47
    relExp               go to state 48
    minmaxExp            go to state 49
    sumExp               go to state 50
    mulExp               go to state 51
    unaryExp             go to state 52
    unaryop              go to state 53
    factor               go to state 54
    mutable              go to state 81
    immutable            go to state 56
    call                 go to state 57
    constant             go to state 58


state 30

   21 parmList: parmList ';' . parmTypeList

    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    typeSpec      go to state 17
    parmTypeList  go to state 82


state 31

   13 varDeclId: ID '[' NUMCONST . ']'

    ']'  shift, and go to state 83


state 32

   17 funDecl: typeSpec ID '(' parms . ')' stmt

    ')'  shift, and go to state 84


state 33

   12 varDeclId: ID .
   13          | ID . '[' NUMCONST ']'

    '['  shift, and go to state 21

    $default  reduce using rule 12 (varDeclId)


state 34

    8 varDeclList: varDeclList ',' varDeclInit .

    $default  reduce using rule 8 (varDeclList)


state 35

  110 constant: BOOLCONST .

    $default  reduce using rule 110 (constant)


state 36

  107 constant: NUMCONST .

    $default  reduce using rule 107 (constant)


state 37

  108 constant: CHARCONST .

    $default  reduce using rule 108 (constant)


state 38

  109 constant: STRINGCONST .

    $default  reduce using rule 109 (constant)


state 39

   97 mutable: ID .
  102 call: ID . '(' args ')'

    '('  shift, and go to state 85

    $default  reduce using rule 97 (mutable)


state 40

   92 unaryop: SUBASS .

    $default  reduce using rule 92 (unaryop)


state 41

   93 unaryop: MULASS .

    $default  reduce using rule 93 (unaryop)


state 42

   94 unaryop: RAND .

    $default  reduce using rule 94 (unaryop)


state 43

   67 unaryRelExp: NOT . unaryRelExp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    unaryRelExp  go to state 86
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 44

   99 immutable: '(' . exp ')'

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    exp          go to state 87
    simpleExp    go to state 80
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 81
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 45

   11 varDeclInit: varDeclId ':' simpleExp .
   63 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 88

    $default  reduce using rule 11 (varDeclInit)


state 46

   64 simpleExp: andExp .
   65 andExp: andExp . AND unaryRelExp

    AND  shift, and go to state 89

    $default  reduce using rule 64 (simpleExp)


state 47

   66 andExp: unaryRelExp .

    $default  reduce using rule 66 (andExp)


state 48

   68 unaryRelExp: relExp .

    $default  reduce using rule 68 (unaryRelExp)


state 49

   69 relExp: minmaxExp . relop minmaxExp
   70       | minmaxExp .
   77 minmaxExp: minmaxExp . minmaxop sumExp

    EQ   shift, and go to state 90
    LEQ  shift, and go to state 91
    GEQ  shift, and go to state 92
    NEQ  shift, and go to state 93
    LT   shift, and go to state 94
    GT   shift, and go to state 95
    MAX  shift, and go to state 96
    MIN  shift, and go to state 97

    $default  reduce using rule 70 (relExp)

    relop     go to state 98
    minmaxop  go to state 99


state 50

   78 minmaxExp: sumExp .
   81 sumExp: sumExp . sumop mulExp

    ADDASS  shift, and go to state 100
    SUBASS  shift, and go to state 101

    $default  reduce using rule 78 (minmaxExp)

    sumop  go to state 102


state 51

   82 sumExp: mulExp .
   85 mulExp: mulExp . mulop unaryExp

    DIVASS  shift, and go to state 103
    MULASS  shift, and go to state 104
    MOD     shift, and go to state 105

    $default  reduce using rule 82 (sumExp)

    mulop  go to state 106


state 52

   86 mulExp: unaryExp .

    $default  reduce using rule 86 (mulExp)


state 53

   90 unaryExp: unaryop . unaryExp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    '('          shift, and go to state 44

    unaryExp   go to state 107
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


state 54

   91 unaryExp: factor .

    $default  reduce using rule 91 (unaryExp)


state 55

   96 factor: mutable .
   98 mutable: mutable . '[' exp ']'

    '['  shift, and go to state 108

    $default  reduce using rule 96 (factor)


state 56

   95 factor: immutable .

    $default  reduce using rule 95 (factor)


state 57

  100 immutable: call .

    $default  reduce using rule 100 (immutable)


state 58

  101 immutable: constant .

    $default  reduce using rule 101 (immutable)


state 59

   27 parmId: ID '[' . ']'

    ']'  shift, and go to state 109


state 60

   24 parmIdList: parmIdList ',' . parmId

    ID  shift, and go to state 26

    parmId  go to state 110


state 61

   45 matchedselectStmt: IF . '(' simpleExp ')' matched ELSE matched
   46 unmatchedselectStmt: IF . '(' simpleExp ')' stmt
   47                    | IF . '(' simpleExp ')' matched ELSE unmatched

    '('  shift, and go to state 111


state 62

   48 matchediterStmt: WHILE . '(' simpleExp ')' matched
   50 unmatchediterStmt: WHILE . '(' simpleExp ')' unmatched

    '('  shift, and go to state 112


state 63

   49 matchediterStmt: FOR . '(' ID IN ID ')' matched
   51 unmatchediterStmt: FOR . '(' ID IN ID ')' unmatched

    '('  shift, and go to state 113


state 64

   52 returnStmt: RETURN . ';'
   53           | RETURN . exp ';'

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    ';'          shift, and go to state 114
    '('          shift, and go to state 44

    exp          go to state 115
    simpleExp    go to state 80
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 81
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 65

   54 breakStmt: BREAK . ';'

    ';'  shift, and go to state 116


state 66

   39 expStmt: ';' .

    $default  reduce using rule 39 (expStmt)


state 67

   40 compoundStmt: '{' . localDecls stmtList '}'

    $default  reduce using rule 42 (localDecls)

    localDecls  go to state 117


state 68

   18 funDecl: ID '(' parms ')' stmt .

    $default  reduce using rule 18 (funDecl)


state 69

   28 stmt: matched .

    $default  reduce using rule 28 (stmt)


state 70

   29 stmt: unmatched .

    $default  reduce using rule 29 (stmt)


state 71

   30 matched: expStmt .

    $default  reduce using rule 30 (matched)


state 72

   31 matched: compoundStmt .

    $default  reduce using rule 31 (matched)


state 73

   32 matched: matchedselectStmt .

    $default  reduce using rule 32 (matched)


state 74

   36 unmatched: unmatchedselectStmt .

    $default  reduce using rule 36 (unmatched)


state 75

   33 matched: matchediterStmt .

    $default  reduce using rule 33 (matched)


state 76

   37 unmatched: unmatchediterStmt .

    $default  reduce using rule 37 (unmatched)


state 77

   34 matched: returnStmt .

    $default  reduce using rule 34 (matched)


state 78

   35 matched: breakStmt .

    $default  reduce using rule 35 (matched)


state 79

   38 expStmt: exp . ';'

    ';'  shift, and go to state 118


state 80

   62 exp: simpleExp .
   63 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 88

    $default  reduce using rule 62 (exp)


state 81

   55 exp: mutable . ASS exp
   56    | mutable . ADDASS exp
   57    | mutable . SUBASS exp
   58    | mutable . MULASS exp
   59    | mutable . DIVASS exp
   60    | mutable . INC
   61    | mutable . DEC
   96 factor: mutable .
   98 mutable: mutable . '[' exp ']'

    ADDASS  shift, and go to state 119
    SUBASS  shift, and go to state 120
    DIVASS  shift, and go to state 121
    MULASS  shift, and go to state 122
    DEC     shift, and go to state 123
    INC     shift, and go to state 124
    ASS     shift, and go to state 125
    '['     shift, and go to state 108

    ADDASS    [reduce using rule 96 (factor)]
    SUBASS    [reduce using rule 96 (factor)]
    DIVASS    [reduce using rule 96 (factor)]
    MULASS    [reduce using rule 96 (factor)]
    $default  reduce using rule 96 (factor)


state 82

   21 parmList: parmList ';' parmTypeList .

    $default  reduce using rule 21 (parmList)


state 83

   13 varDeclId: ID '[' NUMCONST ']' .

    $default  reduce using rule 13 (varDeclId)


state 84

   17 funDecl: typeSpec ID '(' parms ')' . stmt

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    IF           shift, and go to state 61
    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    RETURN       shift, and go to state 64
    BREAK        shift, and go to state 65
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    ';'          shift, and go to state 66
    '('          shift, and go to state 44
    '{'          shift, and go to state 67

    stmt                 go to state 126
    matched              go to state 69
    unmatched            go to state 70
    expStmt              go to state 71
    compoundStmt         go to state 72
    matchedselectStmt    go to state 73
    unmatchedselectStmt  go to state 74
    matchediterStmt      go to state 75
    unmatchediterStmt    go to state 76
    returnStmt           go to state 77
    breakStmt            go to state 78
    exp                  go to state 79
    simpleExp            go to state 80
    andExp               go to state 46
    unaryRelExp          go to state 47
    relExp               go to state 48
    minmaxExp            go to state 49
    sumExp               go to state 50
    mulExp               go to state 51
    unaryExp             go to state 52
    unaryop              go to state 53
    factor               go to state 54
    mutable              go to state 81
    immutable            go to state 56
    call                 go to state 57
    constant             go to state 58


state 85

  102 call: ID '(' . args ')'

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    $default  reduce using rule 104 (args)

    exp          go to state 127
    simpleExp    go to state 80
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 81
    immutable    go to state 56
    call         go to state 57
    args         go to state 128
    argList      go to state 129
    constant     go to state 58


state 86

   67 unaryRelExp: NOT unaryRelExp .

    $default  reduce using rule 67 (unaryRelExp)


state 87

   99 immutable: '(' exp . ')'

    ')'  shift, and go to state 130


state 88

   63 simpleExp: simpleExp OR . andExp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    andExp       go to state 131
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 89

   65 andExp: andExp AND . unaryRelExp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    unaryRelExp  go to state 132
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 90

   75 relop: EQ .

    $default  reduce using rule 75 (relop)


state 91

   71 relop: LEQ .

    $default  reduce using rule 71 (relop)


state 92

   74 relop: GEQ .

    $default  reduce using rule 74 (relop)


state 93

   76 relop: NEQ .

    $default  reduce using rule 76 (relop)


state 94

   72 relop: LT .

    $default  reduce using rule 72 (relop)


state 95

   73 relop: GT .

    $default  reduce using rule 73 (relop)


state 96

   80 minmaxop: MAX .

    $default  reduce using rule 80 (minmaxop)


state 97

   79 minmaxop: MIN .

    $default  reduce using rule 79 (minmaxop)


state 98

   69 relExp: minmaxExp relop . minmaxExp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    '('          shift, and go to state 44

    minmaxExp  go to state 133
    sumExp     go to state 50
    mulExp     go to state 51
    unaryExp   go to state 52
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


state 99

   77 minmaxExp: minmaxExp minmaxop . sumExp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    '('          shift, and go to state 44

    sumExp     go to state 134
    mulExp     go to state 51
    unaryExp   go to state 52
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


state 100

   83 sumop: ADDASS .

    $default  reduce using rule 83 (sumop)


state 101

   84 sumop: SUBASS .

    $default  reduce using rule 84 (sumop)


state 102

   81 sumExp: sumExp sumop . mulExp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    '('          shift, and go to state 44

    mulExp     go to state 135
    unaryExp   go to state 52
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


state 103

   88 mulop: DIVASS .

    $default  reduce using rule 88 (mulop)


state 104

   87 mulop: MULASS .

    $default  reduce using rule 87 (mulop)


state 105

   89 mulop: MOD .

    $default  reduce using rule 89 (mulop)


state 106

   85 mulExp: mulExp mulop . unaryExp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    '('          shift, and go to state 44

    unaryExp   go to state 136
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


state 107

   90 unaryExp: unaryop unaryExp .

    $default  reduce using rule 90 (unaryExp)


state 108

   98 mutable: mutable '[' . exp ']'

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    exp          go to state 137
    simpleExp    go to state 80
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 81
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 109

   27 parmId: ID '[' ']' .

    $default  reduce using rule 27 (parmId)


state 110

   24 parmIdList: parmIdList ',' parmId .

    $default  reduce using rule 24 (parmIdList)


state 111

   45 matchedselectStmt: IF '(' . simpleExp ')' matched ELSE matched
   46 unmatchedselectStmt: IF '(' . simpleExp ')' stmt
   47                    | IF '(' . simpleExp ')' matched ELSE unmatched

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    simpleExp    go to state 138
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 112

   48 matchediterStmt: WHILE '(' . simpleExp ')' matched
   50 unmatchediterStmt: WHILE '(' . simpleExp ')' unmatched

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    simpleExp    go to state 139
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 113

   49 matchediterStmt: FOR '(' . ID IN ID ')' matched
   51 unmatchediterStmt: FOR '(' . ID IN ID ')' unmatched

    ID  shift, and go to state 140


state 114

   52 returnStmt: RETURN ';' .

    $default  reduce using rule 52 (returnStmt)


state 115

   53 returnStmt: RETURN exp . ';'

    ';'  shift, and go to state 141


state 116

   54 breakStmt: BREAK ';' .

    $default  reduce using rule 54 (breakStmt)


state 117

   40 compoundStmt: '{' localDecls . stmtList '}'
   41 localDecls: localDecls . scopedVarDecl

    STATIC  shift, and go to state 142
    INT     shift, and go to state 2
    BOOL    shift, and go to state 3
    CHAR    shift, and go to state 4

    $default  reduce using rule 44 (stmtList)

    scopedVarDecl  go to state 143
    typeSpec       go to state 144
    stmtList       go to state 145


state 118

   38 expStmt: exp ';' .

    $default  reduce using rule 38 (expStmt)


state 119

   56 exp: mutable ADDASS . exp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    exp          go to state 146
    simpleExp    go to state 80
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 81
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 120

   57 exp: mutable SUBASS . exp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    exp          go to state 147
    simpleExp    go to state 80
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 81
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 121

   59 exp: mutable DIVASS . exp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    exp          go to state 148
    simpleExp    go to state 80
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 81
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 122

   58 exp: mutable MULASS . exp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    exp          go to state 149
    simpleExp    go to state 80
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 81
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 123

   61 exp: mutable DEC .

    $default  reduce using rule 61 (exp)


state 124

   60 exp: mutable INC .

    $default  reduce using rule 60 (exp)


state 125

   55 exp: mutable ASS . exp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    exp          go to state 150
    simpleExp    go to state 80
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 81
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 126

   17 funDecl: typeSpec ID '(' parms ')' stmt .

    $default  reduce using rule 17 (funDecl)


state 127

  106 argList: exp .

    $default  reduce using rule 106 (argList)


state 128

  102 call: ID '(' args . ')'

    ')'  shift, and go to state 151


state 129

  103 args: argList .
  105 argList: argList . ',' exp

    ','  shift, and go to state 152

    $default  reduce using rule 103 (args)


state 130

   99 immutable: '(' exp ')' .

    $default  reduce using rule 99 (immutable)


state 131

   63 simpleExp: simpleExp OR andExp .
   65 andExp: andExp . AND unaryRelExp

    AND  shift, and go to state 89

    $default  reduce using rule 63 (simpleExp)


state 132

   65 andExp: andExp AND unaryRelExp .

    $default  reduce using rule 65 (andExp)


state 133

   69 relExp: minmaxExp relop minmaxExp .
   77 minmaxExp: minmaxExp . minmaxop sumExp

    MAX  shift, and go to state 96
    MIN  shift, and go to state 97

    $default  reduce using rule 69 (relExp)

    minmaxop  go to state 99


state 134

   77 minmaxExp: minmaxExp minmaxop sumExp .
   81 sumExp: sumExp . sumop mulExp

    ADDASS  shift, and go to state 100
    SUBASS  shift, and go to state 101

    $default  reduce using rule 77 (minmaxExp)

    sumop  go to state 102


state 135

   81 sumExp: sumExp sumop mulExp .
   85 mulExp: mulExp . mulop unaryExp

    DIVASS  shift, and go to state 103
    MULASS  shift, and go to state 104
    MOD     shift, and go to state 105

    $default  reduce using rule 81 (sumExp)

    mulop  go to state 106


state 136

   85 mulExp: mulExp mulop unaryExp .

    $default  reduce using rule 85 (mulExp)


state 137

   98 mutable: mutable '[' exp . ']'

    ']'  shift, and go to state 153


state 138

   45 matchedselectStmt: IF '(' simpleExp . ')' matched ELSE matched
   46 unmatchedselectStmt: IF '(' simpleExp . ')' stmt
   47                    | IF '(' simpleExp . ')' matched ELSE unmatched
   63 simpleExp: simpleExp . OR andExp

    OR   shift, and go to state 88
    ')'  shift, and go to state 154


state 139

   48 matchediterStmt: WHILE '(' simpleExp . ')' matched
   50 unmatchediterStmt: WHILE '(' simpleExp . ')' unmatched
   63 simpleExp: simpleExp . OR andExp

    OR   shift, and go to state 88
    ')'  shift, and go to state 155


state 140

   49 matchediterStmt: FOR '(' ID . IN ID ')' matched
   51 unmatchediterStmt: FOR '(' ID . IN ID ')' unmatched

    IN  shift, and go to state 156


state 141

   53 returnStmt: RETURN exp ';' .

    $default  reduce using rule 53 (returnStmt)


state 142

    6 scopedVarDecl: STATIC . typeSpec varDeclList ';'

    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    typeSpec  go to state 157


state 143

   41 localDecls: localDecls scopedVarDecl .

    $default  reduce using rule 41 (localDecls)


state 144

    7 scopedVarDecl: typeSpec . varDeclList ';'

    ID  shift, and go to state 33

    varDeclList  go to state 158
    varDeclInit  go to state 15
    varDeclId    go to state 16


state 145

   40 compoundStmt: '{' localDecls stmtList . '}'
   43 stmtList: stmtList . stmt

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    IF           shift, and go to state 61
    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    RETURN       shift, and go to state 64
    BREAK        shift, and go to state 65
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    ';'          shift, and go to state 66
    '('          shift, and go to state 44
    '{'          shift, and go to state 67
    '}'          shift, and go to state 159

    stmt                 go to state 160
    matched              go to state 69
    unmatched            go to state 70
    expStmt              go to state 71
    compoundStmt         go to state 72
    matchedselectStmt    go to state 73
    unmatchedselectStmt  go to state 74
    matchediterStmt      go to state 75
    unmatchediterStmt    go to state 76
    returnStmt           go to state 77
    breakStmt            go to state 78
    exp                  go to state 79
    simpleExp            go to state 80
    andExp               go to state 46
    unaryRelExp          go to state 47
    relExp               go to state 48
    minmaxExp            go to state 49
    sumExp               go to state 50
    mulExp               go to state 51
    unaryExp             go to state 52
    unaryop              go to state 53
    factor               go to state 54
    mutable              go to state 81
    immutable            go to state 56
    call                 go to state 57
    constant             go to state 58


state 146

   56 exp: mutable ADDASS exp .

    $default  reduce using rule 56 (exp)


state 147

   57 exp: mutable SUBASS exp .

    $default  reduce using rule 57 (exp)


state 148

   59 exp: mutable DIVASS exp .

    $default  reduce using rule 59 (exp)


state 149

   58 exp: mutable MULASS exp .

    $default  reduce using rule 58 (exp)


state 150

   55 exp: mutable ASS exp .

    $default  reduce using rule 55 (exp)


state 151

  102 call: ID '(' args ')' .

    $default  reduce using rule 102 (call)


state 152

  105 argList: argList ',' . exp

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    '('          shift, and go to state 44

    exp          go to state 161
    simpleExp    go to state 80
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    minmaxExp    go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 81
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


state 153

   98 mutable: mutable '[' exp ']' .

    $default  reduce using rule 98 (mutable)


state 154

   45 matchedselectStmt: IF '(' simpleExp ')' . matched ELSE matched
   46 unmatchedselectStmt: IF '(' simpleExp ')' . stmt
   47                    | IF '(' simpleExp ')' . matched ELSE unmatched

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    IF           shift, and go to state 61
    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    RETURN       shift, and go to state 64
    BREAK        shift, and go to state 65
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    ';'          shift, and go to state 66
    '('          shift, and go to state 44
    '{'          shift, and go to state 67

    stmt                 go to state 162
    matched              go to state 163
    unmatched            go to state 70
    expStmt              go to state 71
    compoundStmt         go to state 72
    matchedselectStmt    go to state 73
    unmatchedselectStmt  go to state 74
    matchediterStmt      go to state 75
    unmatchediterStmt    go to state 76
    returnStmt           go to state 77
    breakStmt            go to state 78
    exp                  go to state 79
    simpleExp            go to state 80
    andExp               go to state 46
    unaryRelExp          go to state 47
    relExp               go to state 48
    minmaxExp            go to state 49
    sumExp               go to state 50
    mulExp               go to state 51
    unaryExp             go to state 52
    unaryop              go to state 53
    factor               go to state 54
    mutable              go to state 81
    immutable            go to state 56
    call                 go to state 57
    constant             go to state 58


state 155

   48 matchediterStmt: WHILE '(' simpleExp ')' . matched
   50 unmatchediterStmt: WHILE '(' simpleExp ')' . unmatched

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    IF           shift, and go to state 61
    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    RETURN       shift, and go to state 64
    BREAK        shift, and go to state 65
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    ';'          shift, and go to state 66
    '('          shift, and go to state 44
    '{'          shift, and go to state 67

    matched              go to state 164
    unmatched            go to state 165
    expStmt              go to state 71
    compoundStmt         go to state 72
    matchedselectStmt    go to state 73
    unmatchedselectStmt  go to state 74
    matchediterStmt      go to state 75
    unmatchediterStmt    go to state 76
    returnStmt           go to state 77
    breakStmt            go to state 78
    exp                  go to state 79
    simpleExp            go to state 80
    andExp               go to state 46
    unaryRelExp          go to state 47
    relExp               go to state 48
    minmaxExp            go to state 49
    sumExp               go to state 50
    mulExp               go to state 51
    unaryExp             go to state 52
    unaryop              go to state 53
    factor               go to state 54
    mutable              go to state 81
    immutable            go to state 56
    call                 go to state 57
    constant             go to state 58


state 156

   49 matchediterStmt: FOR '(' ID IN . ID ')' matched
   51 unmatchediterStmt: FOR '(' ID IN . ID ')' unmatched

    ID  shift, and go to state 166


state 157

    6 scopedVarDecl: STATIC typeSpec . varDeclList ';'

    ID  shift, and go to state 33

    varDeclList  go to state 167
    varDeclInit  go to state 15
    varDeclId    go to state 16


state 158

    7 scopedVarDecl: typeSpec varDeclList . ';'
    8 varDeclList: varDeclList . ',' varDeclInit

    ';'  shift, and go to state 168
    ','  shift, and go to state 24


state 159

   40 compoundStmt: '{' localDecls stmtList '}' .

    $default  reduce using rule 40 (compoundStmt)


state 160

   43 stmtList: stmtList stmt .

    $default  reduce using rule 43 (stmtList)


state 161

  105 argList: argList ',' exp .

    $default  reduce using rule 105 (argList)


state 162

   46 unmatchedselectStmt: IF '(' simpleExp ')' stmt .

    $default  reduce using rule 46 (unmatchedselectStmt)


state 163

   28 stmt: matched .
   45 matchedselectStmt: IF '(' simpleExp ')' matched . ELSE matched
   47 unmatchedselectStmt: IF '(' simpleExp ')' matched . ELSE unmatched

    ELSE  shift, and go to state 169

    $default  reduce using rule 28 (stmt)


state 164

   48 matchediterStmt: WHILE '(' simpleExp ')' matched .

    $default  reduce using rule 48 (matchediterStmt)


state 165

   50 unmatchediterStmt: WHILE '(' simpleExp ')' unmatched .

    $default  reduce using rule 50 (unmatchediterStmt)


state 166

   49 matchediterStmt: FOR '(' ID IN ID . ')' matched
   51 unmatchediterStmt: FOR '(' ID IN ID . ')' unmatched

    ')'  shift, and go to state 170


state 167

    6 scopedVarDecl: STATIC typeSpec varDeclList . ';'
    8 varDeclList: varDeclList . ',' varDeclInit

    ';'  shift, and go to state 171
    ','  shift, and go to state 24


state 168

    7 scopedVarDecl: typeSpec varDeclList ';' .

    $default  reduce using rule 7 (scopedVarDecl)


state 169

   45 matchedselectStmt: IF '(' simpleExp ')' matched ELSE . matched
   47 unmatchedselectStmt: IF '(' simpleExp ')' matched ELSE . unmatched

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    IF           shift, and go to state 61
    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    RETURN       shift, and go to state 64
    BREAK        shift, and go to state 65
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    ';'          shift, and go to state 66
    '('          shift, and go to state 44
    '{'          shift, and go to state 67

    matched              go to state 172
    unmatched            go to state 173
    expStmt              go to state 71
    compoundStmt         go to state 72
    matchedselectStmt    go to state 73
    unmatchedselectStmt  go to state 74
    matchediterStmt      go to state 75
    unmatchediterStmt    go to state 76
    returnStmt           go to state 77
    breakStmt            go to state 78
    exp                  go to state 79
    simpleExp            go to state 80
    andExp               go to state 46
    unaryRelExp          go to state 47
    relExp               go to state 48
    minmaxExp            go to state 49
    sumExp               go to state 50
    mulExp               go to state 51
    unaryExp             go to state 52
    unaryop              go to state 53
    factor               go to state 54
    mutable              go to state 81
    immutable            go to state 56
    call                 go to state 57
    constant             go to state 58


state 170

   49 matchediterStmt: FOR '(' ID IN ID ')' . matched
   51 unmatchediterStmt: FOR '(' ID IN ID ')' . unmatched

    BOOLCONST    shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    ID           shift, and go to state 39
    IF           shift, and go to state 61
    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    RETURN       shift, and go to state 64
    BREAK        shift, and go to state 65
    SUBASS       shift, and go to state 40
    MULASS       shift, and go to state 41
    RAND         shift, and go to state 42
    NOT          shift, and go to state 43
    ';'          shift, and go to state 66
    '('          shift, and go to state 44
    '{'          shift, and go to state 67

    matched              go to state 174
    unmatched            go to state 175
    expStmt              go to state 71
    compoundStmt         go to state 72
    matchedselectStmt    go to state 73
    unmatchedselectStmt  go to state 74
    matchediterStmt      go to state 75
    unmatchediterStmt    go to state 76
    returnStmt           go to state 77
    breakStmt            go to state 78
    exp                  go to state 79
    simpleExp            go to state 80
    andExp               go to state 46
    unaryRelExp          go to state 47
    relExp               go to state 48
    minmaxExp            go to state 49
    sumExp               go to state 50
    mulExp               go to state 51
    unaryExp             go to state 52
    unaryop              go to state 53
    factor               go to state 54
    mutable              go to state 81
    immutable            go to state 56
    call                 go to state 57
    constant             go to state 58


state 171

    6 scopedVarDecl: STATIC typeSpec varDeclList ';' .

    $default  reduce using rule 6 (scopedVarDecl)


state 172

   45 matchedselectStmt: IF '(' simpleExp ')' matched ELSE matched .

    $default  reduce using rule 45 (matchedselectStmt)


state 173

   47 unmatchedselectStmt: IF '(' simpleExp ')' matched ELSE unmatched .

    $default  reduce using rule 47 (unmatchedselectStmt)


state 174

   49 matchediterStmt: FOR '(' ID IN ID ')' matched .

    $default  reduce using rule 49 (matchediterStmt)


state 175

   51 unmatchediterStmt: FOR '(' ID IN ID ')' unmatched .

    $default  reduce using rule 51 (unmatchediterStmt)
